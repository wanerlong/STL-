// 65.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include<vector>
#include<iostream>
#include<array>
#include<ctime>
#include<cstdlib>
const long ASIZE = 100000L;
using namespace std;
long get_a_target_long()
{
	long target = 0;
	cout << "target (0~" << RAND_MAX << "): ";
	cin >> target;
	return target;
}
string get_a_target_string()
{
	long target = 0;
	char buf[10];
	cout << "target (0~" << RAND_MAX << "): ";
	cin >> target;
	sprintf_s(buf,10,"%d",target);
	return string(buf);
}
int comparLongs(const void*a, const void *b)
{
	return(*(long*)a - *(long*)b);
}
int compareStrings(const void *a, const void *b)
{
	if (*(string*)a > *(string*)b)
		return 1;
	else if (*(string*)a < *(string*)b)
		return -1;
	else
		return 0;
}
void test_array()
{
	cout << "\ntest_array().......\n";
	array<long, ASIZE>c;
	clock_t timeStart = clock();
	for (long i = 0; i < ASIZE; ++i) {
		c[i] = rand();
	}
	cout << "milli-seconds : " << (clock() - timeStart) << endl;
	cout << "array.size()= " << c.size() << endl;
	cout << "array.front()= " << c.front() << endl;
	cout << "array.back()= " << c.back() << endl;
	cout << "array.data()= " << c.data() << endl;

	long target = get_a_target_long();

	timeStart = clock();
	::qsort(c.data(), ASIZE, sizeof(long), comparLongs);
	long *pItem = (long *) ::bsearch(&target, (c.data()), ASIZE, sizeof(long), comparLongs);
	cout << "qsort()+bsearch(), milli-seconds : " << (clock() - timeStart) << endl;
	if (pItem != NULL)
		cout << "found, " << *pItem << endl;
	else
		cout << "not found! " << endl;
}
int _tmain(int argc, _TCHAR* argv[])
{
	test_array();
	system("pause");
}

